// Generated by view binder compiler. Do not edit!
package com.lukasz.witkowski.schedule.shopxmlviews.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lukasz.witkowski.schedule.shopxmlviews.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductCardBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton imageButton;

  @NonNull
  public final TextView nameTv;

  @NonNull
  public final ImageView productIv;

  @NonNull
  public final TextView shortDescrptionTv;

  private ProductCardBinding(@NonNull FrameLayout rootView, @NonNull ImageButton imageButton,
      @NonNull TextView nameTv, @NonNull ImageView productIv, @NonNull TextView shortDescrptionTv) {
    this.rootView = rootView;
    this.imageButton = imageButton;
    this.nameTv = nameTv;
    this.productIv = productIv;
    this.shortDescrptionTv = shortDescrptionTv;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageButton;
      ImageButton imageButton = ViewBindings.findChildViewById(rootView, id);
      if (imageButton == null) {
        break missingId;
      }

      id = R.id.name_tv;
      TextView nameTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.product_iv;
      ImageView productIv = ViewBindings.findChildViewById(rootView, id);
      if (productIv == null) {
        break missingId;
      }

      id = R.id.short_descrption_tv;
      TextView shortDescrptionTv = ViewBindings.findChildViewById(rootView, id);
      if (shortDescrptionTv == null) {
        break missingId;
      }

      return new ProductCardBinding((FrameLayout) rootView, imageButton, nameTv, productIv,
          shortDescrptionTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
